name: Create Release

on:
  workflow_dispatch:
    inputs:
      workflow_id:
        description: 'Build workflow run ID to use for artifacts'
        required: true
        type: string
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a prerelease?'
        required: true
        type: boolean
        default: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts from workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow_conclusion: success
          run_id: ${{ github.event.inputs.workflow_id }}
          path: artifacts

      - name: List downloaded artifacts
        run: find artifacts -type f | sort

      - name: Prepare release assets
        run: |
          mkdir -p release_assets
          
          # Process Windows x64 artifacts
          if [ -d "artifacts/deepchat-win-x64" ]; then
            cp artifacts/deepchat-win-x64/*.exe release_assets/deepchat-${{ github.event.inputs.version }}-win-x64.exe 2>/dev/null || true
            cp artifacts/deepchat-win-x64/*.msi release_assets/deepchat-${{ github.event.inputs.version }}-win-x64.msi 2>/dev/null || true
            cp artifacts/deepchat-win-x64/*.zip release_assets/deepchat-${{ github.event.inputs.version }}-win-x64.zip 2>/dev/null || true
          fi
          
          # Process Windows arm64 artifacts
          if [ -d "artifacts/deepchat-win-arm64" ]; then
            cp artifacts/deepchat-win-arm64/*.exe release_assets/deepchat-${{ github.event.inputs.version }}-win-arm64.exe 2>/dev/null || true
            cp artifacts/deepchat-win-arm64/*.msi release_assets/deepchat-${{ github.event.inputs.version }}-win-arm64.msi 2>/dev/null || true
            cp artifacts/deepchat-win-arm64/*.zip release_assets/deepchat-${{ github.event.inputs.version }}-win-arm64.zip 2>/dev/null || true
          fi
          
          # Process Linux x64 artifacts
          if [ -d "artifacts/deepchat-linux-x64" ]; then
            cp artifacts/deepchat-linux-x64/*.AppImage release_assets/deepchat-${{ github.event.inputs.version }}-linux-x64.AppImage 2>/dev/null || true
            cp artifacts/deepchat-linux-x64/*.deb release_assets/deepchat-${{ github.event.inputs.version }}-linux-x64.deb 2>/dev/null || true
            cp artifacts/deepchat-linux-x64/*.rpm release_assets/deepchat-${{ github.event.inputs.version }}-linux-x64.rpm 2>/dev/null || true
            cp artifacts/deepchat-linux-x64/*.tar.gz release_assets/deepchat-${{ github.event.inputs.version }}-linux-x64.tar.gz 2>/dev/null || true
          fi
          
          ls -la release_assets/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: DeepChat ${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
